{"version":3,"sources":["components/UsersTable/UsersTable.jsx","api/api.jsx","components/Users/Users.jsx","components/Header/Header.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","components/PostsList/PostsList.jsx","api/posts.js","App.jsx","index.js"],"names":["UsersTable","users","className","border","map","user","key","id","name","username","email","website","company","address","city","activeClassName","to","BASE_URL","request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","getUsers","Users","state","a","this","setState","React","Component","Header","filterByPosts","setUserSelect","userSelect","value","onChange","target","person","NewCommentForm","memo","loadComments","useState","newName","setNewName","newEmail","setNewEmail","newBody","setNewBody","handleChange","onSubmit","event","preventDefault","type","placeholder","required","getPostComments","postId","addPostComment","data","userId","body","method","JSON","stringify","PostDetails","post","comments","setComments","visible","setVisible","useEffect","comment","useCallback","deleteComment","deletePostComment","putComment","headers","putPostComment","title","onClick","length","PostsList","filterPosts","selectUserId","propTypes","PropTypes","arrayOf","shape","number","isRequired","string","func","App","setUsers","setUser","posts","setPosts","setFilterPosts","setUserId","people","sort","b","numberID","filter","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae705ac6.chunk.js","sourcesContent":["import React from 'react';\nimport './UsersTable.scss';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport const UsersTable = ({ users }) => (\n  <table className=\"table\" border=\"2\">\n    <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Username</th>\n        <th>Email</th>\n        <th>Website</th>\n        <th>Company</th>\n        <th>City</th>\n        <th>Posts</th>\n      </tr>\n    </thead>\n    <tbody>\n      {users.map(user => (\n        <tr key={user.id}>\n          <td>{user.id}</td>\n          <td>{user.name}</td>\n          <td>{user.username}</td>\n          <td>{user.email}</td>\n          <td>{user.website}</td>\n          <td>{user.company.name}</td>\n          <td>{user.address.city}</td>\n          <td>\n            <NavLink\n              activeClassName=\"is-active\"\n              className=\"nav__link\"\n              to=\"/posts\"\n            >\n              Posts\n            </NavLink>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nUsersTable.propTypes = {\n  users: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    address: PropTypes.shape({\n      city: PropTypes.string.isRequired,\n    }).isRequired,\n    website: PropTypes.string.isRequired,\n    company: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","export const BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result);\n\nexport const getUsers = () => request(`/users`);\n","import React from 'react';\nimport { UsersTable } from '../UsersTable';\nimport { getUsers } from '../../api/api';\n\nexport class Users extends React.Component {\n  state = {\n    users: [],\n  }\n\n  async componentDidMount() {\n    const users = await getUsers();\n\n    this.setState({ users });\n  }\n\n  render() {\n    const { users } = this.state;\n\n    return (\n      <UsersTable users={users} />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\n\nexport const Header = ({\n  filterByPosts,\n  setUserSelect,\n  userSelect,\n  users,\n}) => (\n  <header className=\"App__header\">\n    <label>\n      Select a user: &nbsp;\n\n      <select\n        className=\"App__user-selector\"\n        name=\"user\"\n        value={userSelect}\n        onChange={({ target }) => {\n          setUserSelect(target.value);\n          filterByPosts(target.value);\n        }}\n      >\n        <option value=\"0\">All users</option>\n        {users.map(person => (\n          <option\n            key={person.id}\n            value={person.id}\n          >\n            {person.name}\n          </option>\n        ))}\n\n      </select>\n    </label>\n  </header>\n);\n\nHeader.propTypes = {\n  filterByPosts: PropTypes.func.isRequired,\n  setUserSelect: PropTypes.func.isRequired,\n  userSelect: PropTypes.number.isRequired,\n  users: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = React.memo(\n  ({ loadComments }) => {\n    const [newName, setNewName] = useState('');\n    const [newEmail, setNewEmail] = useState('');\n    const [newBody, setNewBody] = useState('');\n\n    const handleChange = ({ target }) => {\n      const { name, value } = target;\n\n      // eslint-disable-next-line default-case\n      switch (name) {\n        case 'name':\n          setNewName(value);\n          break;\n        case 'email':\n          setNewEmail(value);\n          break;\n        case 'body':\n          setNewBody(value);\n          break;\n      }\n    };\n\n    const handleSubmit = (event) => {\n      event.preventDefault();\n      loadComments(newName, newEmail, newBody);\n      setNewName('');\n      setNewEmail('');\n      setNewBody('');\n    };\n\n    return (\n      <form\n        onSubmit={handleSubmit}\n        className=\"NewCommentForm\"\n      >\n        <div className=\"form-field\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Your name\"\n            className=\"NewCommentForm__input\"\n            value={newName}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your email\"\n            className=\"NewCommentForm__input\"\n            value={newEmail}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <textarea\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className=\"NewCommentForm__input\"\n            value={newBody}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"NewCommentForm__submit-button button\"\n        >\n          Add a comment\n        </button>\n      </form>\n    );\n  },\n);\n\nNewCommentForm.propTypes = {\n  loadComments: PropTypes.func.isRequired,\n};\n","import { request, BASE_URL } from './api';\n\nexport const getPostComments = postId => request(`/comments?postId=${postId}`);\n\nconst post = (url, data) => fetch(`${BASE_URL}${url}`, {\n  method: 'POST',\n  body: JSON.stringify(data),\n})\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const addPostComment = ({\n  userId,\n  newName,\n  newEmail,\n  newBody,\n}) => post('/comments', {\n  postId: userId,\n  name: newName,\n  email: newEmail,\n  body: newBody,\n});\n\nexport const deletePostComment = postId => fetch(\n  `${BASE_URL}/comments/${postId}`, {\n    method: 'DELETE',\n  },\n)\n  .then(response => response.json())\n  .then(result => result);\n\nexport const putPostComment = postId => fetch(\n  `${BASE_URL}/comments/${postId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(),\n  },\n)\n  .then(response => response.json())\n  .then(result => result);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm/NewCommentForm';\nimport {\n  getPostComments,\n  deletePostComment,\n  addPostComment,\n  putPostComment,\n} from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ userId, post }) => {\n  const [comments, setComments] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    getPostComments(userId)\n      .then((comment) => {\n        setComments(comment);\n      });\n  }, [userId]);\n\n  const loadComments = useCallback((newName, newEmail, newBody) => {\n    addPostComment({\n      userId,\n      newName,\n      newEmail,\n      newBody,\n    })\n      .then(() => getPostComments(userId))\n      .then(setComments);\n  }, [userId]);\n\n  const deleteComment = (postId) => {\n    deletePostComment(postId)\n      .then(() => getPostComments(userId))\n      .then(setComments);\n  };\n\n  const putComment = (postId) => {\n    putPostComment(postId)\n      .then(() => getPostComments(userId))\n      .then(setComments);\n  };\n\n  if (!post) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>\n          <strong>\n            Title:\n            {' '}\n          </strong>\n          {post.title}\n        </p>\n      </section>\n      <section className=\"PostDetails__post\">\n\n        <p>\n          <strong>\n            Body:\n            {' '}\n          </strong>\n          {post.body}\n        </p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button PostDetails__button\"\n          onClick={() => {\n            setVisible(!visible);\n          }}\n        >\n          {`Hide ${comments.length} comments`}\n        </button>\n        {visible && (\n        <ul className=\"PostDetails__list\">\n          {comments && comments.map(comment => (\n            <li key={comment.id} className=\"PostDetails__list-item\">\n              <button\n                onClick={() => {\n                  deleteComment(comment.id);\n                }}\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n              >\n                Delete\n              </button>\n              <button\n                onClick={() => {\n                  putComment(comment.id);\n                }}\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n              >\n                Edit\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n        )}\n      </section>\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            loadComments={loadComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  userId: PropTypes.number.isRequired,\n  post: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = React.memo(\n  ({ filterPosts, selectUserId, userId }) => (\n    <div className=\"PostsList\">\n      <h2>{`Posts: ${filterPosts.length}`}</h2>\n      <ul className=\"PostsList__list\">\n        {filterPosts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                {`[User: ${post.userId}]`}\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                selectUserId(post.id === userId ? 0 : post.id, post);\n              }}\n            >\n              {(userId === post.id) ? 'Close' : 'Details'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  ),\n);\n\nPostsList.propTypes = {\n  filterPosts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string || null.isRequired,\n    userId: PropTypes.number || null.isRequired,\n  })).isRequired,\n  selectUserId: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import { request } from './api';\n\nexport const getAllPosts = () => request('/posts');\n\nexport const getUserPosts = userId => request(`/posts?userId=${userId}`);\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import './App.scss';\nimport './styles/general.scss';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Route, Switch, NavLink, Redirect } from 'react-router-dom';\nimport { Users } from './components/Users';\nimport { Header } from './components/Header/Header';\nimport { PostDetails } from './components/PostDetails/PostDetails';\nimport { PostsList } from './components/PostsList/PostsList';\nimport { getUsers } from './api/api';\nimport { getAllPosts } from './api/posts';\n\nexport const App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState([]);\n  const [userSelect, setUserSelect] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [filterPosts, setFilterPosts] = useState(posts);\n  const [userId, setUserId] = useState(0);\n\n  useEffect(() => {\n    getUsers()\n      .then((people) => {\n        setUsers(people\n          .sort((a, b) => a.id - b.id));\n      });\n\n    getAllPosts()\n      .then((post) => {\n        setPosts(post);\n        setFilterPosts(post);\n      });\n  }, []);\n\n  const selectUserId = useCallback((numberID, person) => {\n    setUserId(numberID);\n    setUser(person);\n  }, []);\n\n  const filterByPosts = useCallback((number) => {\n    if (number === '0') {\n      setFilterPosts(posts.map(post => post));\n\n      return;\n    }\n\n    setFilterPosts(posts.filter(post => +post.userId === +number));\n  }, [filterPosts]);\n\n  return (\n    <div className=\"App\">\n      <NavLink\n        activeClassName=\"is-active\"\n        className=\"nav__link\"\n        to=\"/\"\n        exact\n      >\n        Home\n      </NavLink>\n      <NavLink\n        activeClassName=\"is-active\"\n        className=\"nav__link\"\n        to=\"/users\"\n      >\n        Users\n      </NavLink>\n      <NavLink\n        activeClassName=\"is-active\"\n        className=\"nav__link\"\n        to=\"/posts\"\n      >\n        Posts\n      </NavLink>\n      <Switch>\n        <Route path=\"/\" exact>\n          <h1 className=\"home\">HOME</h1>\n        </Route>\n        <Route path=\"/users\">\n          <Users />\n        </Route>\n        <Route path=\"/posts\">\n          <Header\n            filterByPosts={filterByPosts}\n            setUserSelect={setUserSelect}\n            userSelect={userSelect}\n            users={users}\n          />\n          <main className=\"App__main\">\n            <div className=\"App__sidebar\">\n              <PostsList\n                filterPosts={filterPosts}\n                selectUserId={selectUserId}\n                userId={userId}\n              />\n            </div>\n            {userId !== 0 && (\n            <div className=\"App__content\">\n              <PostDetails\n                userId={userId}\n                post={user}\n              />\n            </div>\n            )}\n          </main>\n        </Route>\n        <Redirect to=\"/\" />\n        <p>Щось я заблудився</p>\n      </Switch>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}